[{"/Users/juliadimonte/Projects/tetris/src/index.js":"1","/Users/juliadimonte/Projects/tetris/src/App.js":"2","/Users/juliadimonte/Projects/tetris/src/reportWebVitals.js":"3","/Users/juliadimonte/Projects/tetris/src/components/Tetris.js":"4","/Users/juliadimonte/Projects/tetris/src/components/Stage.js":"5","/Users/juliadimonte/Projects/tetris/src/components/StartButton.js":"6","/Users/juliadimonte/Projects/tetris/src/components/Display.js":"7","/Users/juliadimonte/Projects/tetris/src/components/Cell.js":"8","/Users/juliadimonte/Projects/tetris/src/gameHelpers.js":"9","/Users/juliadimonte/Projects/tetris/src/components/styles/StyledCell.js":"10","/Users/juliadimonte/Projects/tetris/src/tetrominos.js":"11","/Users/juliadimonte/Projects/tetris/src/components/styles/StyledTetris.js":"12","/Users/juliadimonte/Projects/tetris/src/components/styles/StyledStage.js":"13","/Users/juliadimonte/Projects/tetris/src/components/styles/StyledDisplay.js":"14","/Users/juliadimonte/Projects/tetris/src/components/styles/StyledStartButton.js":"15","/Users/juliadimonte/Projects/tetris/src/hooks/usePlayer.js":"16","/Users/juliadimonte/Projects/tetris/src/hooks/useStage.js":"17","/Users/juliadimonte/Projects/tetris/src/hooks/useInterval.js":"18","/Users/juliadimonte/Projects/tetris/src/hooks/useGameStatus.js":"19"},{"size":500,"mtime":1613090193519,"results":"20","hashOfConfig":"21"},{"size":162,"mtime":1613090842815,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1613090193520,"results":"23","hashOfConfig":"21"},{"size":3187,"mtime":1613514848606,"results":"24","hashOfConfig":"21"},{"size":323,"mtime":1613149794046,"results":"25","hashOfConfig":"21"},{"size":235,"mtime":1613154553139,"results":"26","hashOfConfig":"21"},{"size":214,"mtime":1613154417548,"results":"27","hashOfConfig":"21"},{"size":248,"mtime":1613514925106,"results":"28","hashOfConfig":"21"},{"size":926,"mtime":1613509932864,"results":"29","hashOfConfig":"21"},{"size":455,"mtime":1613153748666,"results":"30","hashOfConfig":"21"},{"size":1099,"mtime":1613153719341,"results":"31","hashOfConfig":"21"},{"size":484,"mtime":1613153763666,"results":"32","hashOfConfig":"21"},{"size":372,"mtime":1613153780164,"results":"33","hashOfConfig":"21"},{"size":425,"mtime":1613154252335,"results":"34","hashOfConfig":"21"},{"size":371,"mtime":1613154465067,"results":"35","hashOfConfig":"21"},{"size":1798,"mtime":1613511684911,"results":"36","hashOfConfig":"21"},{"size":1689,"mtime":1613513768537,"results":"37","hashOfConfig":"21"},{"size":491,"mtime":1613090676000,"results":"38","hashOfConfig":"21"},{"size":726,"mtime":1613514103766,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1y58dtg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},"/Users/juliadimonte/Projects/tetris/src/index.js",[],["81","82"],"/Users/juliadimonte/Projects/tetris/src/App.js",[],"/Users/juliadimonte/Projects/tetris/src/reportWebVitals.js",[],"/Users/juliadimonte/Projects/tetris/src/components/Tetris.js",["83"],"import React, { useState } from \"react\";\n\nimport { createStage, checkCollision } from \"../gameHelpers\";\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\n\n// Custom Hooks\nimport { useInterval } from \"../hooks/useInterval\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { useStage } from \"../hooks/useStage\";\nimport { useGameStatus } from \"../hooks/useGameStatus\";\n\n// Components\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n\n  console.log(\"re-render\");\n\n  const movePlayer = (dir) => {\n    //check we will not collide\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setRows(0);\n    setLevel(0);\n  };\n\n  const drop = () => {\n    // increase level when player has cleared 10 rows\n    if (rows > (level + 1) * 10) {\n      setLevel((prev) => prev + 1);\n      //increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      //game over\n      if (player.pos.y < 1) {\n        console.log(\"GAME OVER\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1); //left\n      } else if (keyCode === 39) {\n        movePlayer(1); //right\n      } else if (keyCode === 40) {\n        dropPlayer(); //down\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1); //rotate\n      }\n    }\n  };\n\n  // This one starts the game\n  // Custom hook by Dan Abramov\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={(e) => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`Rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","/Users/juliadimonte/Projects/tetris/src/components/Stage.js",[],"/Users/juliadimonte/Projects/tetris/src/components/StartButton.js",[],"/Users/juliadimonte/Projects/tetris/src/components/Display.js",[],"/Users/juliadimonte/Projects/tetris/src/components/Cell.js",[],"/Users/juliadimonte/Projects/tetris/src/gameHelpers.js",[],"/Users/juliadimonte/Projects/tetris/src/components/styles/StyledCell.js",[],"/Users/juliadimonte/Projects/tetris/src/tetrominos.js",[],"/Users/juliadimonte/Projects/tetris/src/components/styles/StyledTetris.js",[],"/Users/juliadimonte/Projects/tetris/src/components/styles/StyledStage.js",[],"/Users/juliadimonte/Projects/tetris/src/components/styles/StyledDisplay.js",[],"/Users/juliadimonte/Projects/tetris/src/components/styles/StyledStartButton.js",[],"/Users/juliadimonte/Projects/tetris/src/hooks/usePlayer.js",[],"/Users/juliadimonte/Projects/tetris/src/hooks/useStage.js",[],"/Users/juliadimonte/Projects/tetris/src/hooks/useInterval.js",[],"/Users/juliadimonte/Projects/tetris/src/hooks/useGameStatus.js",["84"],"import { useState, useEffect, useCallback } from \"react\";\n\nexport const useGameStatus = (rowsCleared) => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // This is how original Tetris score is calculated\n      setScore((prev) => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows((prev) => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":25,"column":17,"nodeType":"91","messageId":"92","endLine":25,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":8,"column":9,"nodeType":"95","endLine":8,"endColumn":42},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'setScore' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'linePoints' array makes the dependencies of useCallback Hook (at line 17) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'linePoints' in its own useMemo() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation"]